import asyncio
from aiogram import Router, F
import logging
import sys
from datetime import datetime, timedelta
from aiogram_calendar import SimpleCalendar, SimpleCalendarCallback
from aiogram.types import ContentType, LabeledPrice, PreCheckoutQuery
from aiogram import types
from aiogram import Bot, Dispatcher
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from aiogram.filters.callback_data import CallbackData
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, CallbackQuery
from aiogram.utils.markdown import hbold
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import ReplyKeyboardRemove
from aiogram.methods.forward_message import ForwardMessage
from aiogram.methods.send_message import SendMessage
import json
from aiogram.exceptions import TelegramBadRequest
from datetime import datetime
from aiogram.filters import Command
from aiogram import html
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
from random import randint
from contextlib import suppress
from aiogram.types import FSInputFile, URLInputFile, BufferedInputFile
from aiogram.fsm.storage.memory import MemoryStorage
from utils.external_api import price_in_fx
from db.db_save import save_user
from handlers.consultation import save_payment

logging.basicConfig(level=logging.INFO)

bot = Bot(token="7364889529:AAFiGP2EvzSaCH0foyVe2egk8Vk_3t-S5Lc")
dp = Dispatcher(storage=MemoryStorage())

# ---------
# –í–ê–ñ–ù–û: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ ID –∫–∞–Ω–∞–ª–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å—Å—è
CHANNEL_ID = -1001785856277  # –ü—Ä–∏–º–µ—Ä: "-1001234567890"
# ---------

f = ''
time = None
PAYMENTS_PROVIDER_TOKEN = '390540012:LIVE:52757'
PRICE = types.LabeledPrice(label='–û–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è', amount=99000)

# –ü—Ä–∏–º–µ—Ä provider_data —Å –ø–æ–∑–∏—Ü–∏–µ–π "–û–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è"
provider_data1 = {
    "receipt": {
        "items": [
            {
                "description": "–û–Ω–ª–∞–π–Ω –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è",
                "quantity": "1.00",
                "amount": {
                    "value": "990.00",
                    "currency": "RUB"
                },
                "vat_code": 1
            }
        ],
    }
}

# ============================================================
# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
# ============================================================

async def check_user_subscription(user_id: int) -> bool:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –∫–∞–Ω–∞–ª CHANNEL_ID
    –¢—Ä–µ–±—É–µ—Ç, —á—Ç–æ–±—ã –±–æ—Ç –±—ã–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏–ª–∏ –∏–º–µ–ª –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–µ –ø—Ä–∞–≤–∞.
    """
    try:
        member = await bot.get_chat_member(chat_id=CHANNEL_ID, user_id=user_id)
        if member.status in ("creator", "administrator", "member"):
            return True
        return False
    except:
        return False


# –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á (–¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π), —á—Ç–æ–±—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏
pending_tasks_15min = {}
pending_tasks_2h = {}
pending_tasks_after_final = {}

async def reminder_after_15min(user_id: int, state: FSMContext):
    """
    –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —á–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç, –µ—Å–ª–∏ —é–∑–µ—Ä –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è.
    """
    await asyncio.sleep(15 * 60)  # 15 –º–∏–Ω—É—Ç
    # –ü–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É, –µ—Å–ª–∏ —é–∑–µ—Ä –Ω–µ —É—Å–ø–µ–ª –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
    is_subscribed = await check_user_subscription(user_id)
    if not is_subscribed:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ-–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å
        text = ("–ü—Ä–∏–≤–µ—Ç ‚ò∫Ô∏è\n"
                "–¢–µ–±—è, –Ω–∞–≤–µ—Ä–Ω–æ–µ, –æ—Ç–≤–ª–µ–∫–ª–∏, –∏ —Ç—ã —Ç–∞–∫ –∏ –Ω–µ —É–∑–Ω–∞–ª, –∫–∞–∫ –ø—Ä–æ–¥–∞–≤–∞—Ç—å —Ç–æ–≤–∞—Ä, —á—Ç–æ–±—ã –Ω–µ –Ω–∞—Ä—É—à–∞—Ç—å –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ –†–§ –∏ –Ω–µ –ø–æ–ª—É—á–∞—Ç—å —à—Ç—Ä–∞—Ñ—ã.\n"
                "–î–∞–≤–∞–π –ø—Ä–æ–¥–æ–ª–∂–∏–º?")
        builder = InlineKeyboardBuilder()
        builder.add(types.InlineKeyboardButton(text="–£–∂–µ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è!", callback_data="check_again_subscribe"))
        await bot.send_message(user_id, text, reply_markup=builder.as_markup())

async def reminder_after_2h(user_id: int):
    """
    –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —á–µ—Ä–µ–∑ 2 —á–∞—Å–∞, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≤–∏—Å –Ω–∞ –∫–∞–∫–æ–º-—Ç–æ –Ω–µ –∫–æ–Ω–µ—á–Ω–æ–º —à–∞–≥–µ (–Ω–µ –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É).
    """
    await asyncio.sleep(2 * 60 * 60)  # 2 —á–∞—Å–∞
    text = ("–í–∏–∂—É, —á—Ç–æ —Ç—ã –Ω–∏—á–µ–≥–æ –Ω–µ —É—Å–ø–µ–≤–∞–µ—à—å, –¥–∞–∂–µ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É - –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ—é –Ω–∏—à—É ü•µ\n\n"
            "–û—á–µ–Ω—å –∑–Ω–∞–∫–æ–º–∞—è —Å–∏—Ç—É–∞—Ü–∏—è, —Å–∞–º –∫–æ–≥–¥–∞-—Ç–æ –±—ã–ª –≤ —Ç–∞–∫–æ–π –≥–æ–Ω–∫–µ, –∏ —Ç–æ–ª—å–∫–æ –∑–∞–±–æ—Ç–ª–∏–≤—ã–µ —Ä—É–∫–∏ –Ω–∞—à–∏—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ "
            "–ø–æ–º–æ–≥–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å –º–æ—é —Ä–∞–±–æ—Ç—É ‚ù§Ô∏è\n\n"
            "–ù–µ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–π —Å–≤–æ–π –±–∏–∑–Ω–µ—Å –Ω–∞ –ø–æ—Ç–æ–º, –∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ‚¨áÔ∏è")
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="–í—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä", callback_data="go_to_main_menu"))
    await bot.send_message(user_id, text, reply_markup=builder.as_markup())


from aiogram import types
from aiogram.types import URLInputFile
from aiogram.utils.keyboard import InlineKeyboardBuilder
import asyncio


async def final_reminder_after_15min(user_id: int):
    """
    15 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ –∫–æ–Ω–µ—á–Ω–æ–≥–æ —à–∞–≥–∞ –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞ - —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Å–æ —Å–∫–∏–¥–∫–æ–π.
    """
    await asyncio.sleep(15 * 60)
    text = (
        "–í–∏–∂—É, —á—Ç–æ —Ç—ã –ø–æ–ª—É—á–∏–ª(–∞) –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å, –∫–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω—ã, —á—Ç–æ–±—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é –ª–µ–≥–∞–ª—å–Ω–æ –ø—Ä–æ–¥–∞–≤–∞—Ç—å —Ç–æ–≤–∞—Ä üòä\n\n"
        "–£ —Ç–µ–±—è –µ—â–µ –µ—Å—Ç—å —à–∞–Ω—Å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ —Å—É–ø–µ—Ä—Ü–µ–Ω–µ - 990 —Ä—É–±–ª–µ–π, –≤–º–µ—Å—Ç–æ 2500 —Ä—É–±–ª–µ–π –∏ —É–∑–Ω–∞—Ç—å:\n"
        "‚úÖ –ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä –¥–ª—è —Ö–æ—Ä–æ—à–µ–π –ø—Ä–æ–¥–∞–∂–∏ (—Å–∞–º—ã–µ —Ç–æ–ø–æ–≤—ã–µ –Ω–∏—à–∏)?\n"
        "‚úÖ –ö–∞–∫ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏—Ö –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤?\n"
        "‚úÖ –ì–¥–µ –∑–∞–∫—É–ø–∞—Ç—å —Ç–æ–≤–∞—Ä –∏–ª–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å?\n"
        "‚úÖ –ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç —Å—Ç–∞–ª –ø—Ä–æ–¥–∞–≤–∞—Ç—å –ø–æ–¥ –≤–∞—à–∏–º –±—Ä–µ–Ω–¥–æ–º (–ª–æ–≥–æ—Ç–∏–ø–æ–º, –Ω–∞–∑–≤–∞–Ω–∏–∏)?\n"
        "‚úÖ –ö–∞–∫ —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å –Ω–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (–∫–∞–∫–∏–µ —Ç–æ–≤–∞—Ä—ã –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –≤ –æ–¥–Ω–æ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ –∏ —Ç.–ø.)?\n\n"
        "–≠—Ç–æ –º–æ–µ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥–ª—è —Ç–µ–±—è ü§ù\n"
        "–ü—Ä–æ—Å—Ç–æ –ø–æ–¥—É–º–∞–π, —á—Ç–æ —É–∂–µ –±–æ–ª–µ–µ 60 —Å–µ–ª–ª–µ—Ä–æ–≤ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –º–æ–∏–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –∏ –≤—ã—à–ª–∏ –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç ü§ë."
    )

    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", callback_data="button1111"))

    photo = URLInputFile("https://i.ibb.co/ccR0XfYt/15ad202e-246e-46a3-a19d-899cd49f17f9.jpg")

    await bot.send_photo(
        chat_id=user_id,
        photo=photo,
        caption=text,
        reply_markup=builder.as_markup()
    )

# –î–æ–ø. –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã
async def remind_consultation_day_before(user_id: int, date_str: str, time_str: str):
    """
    –ù–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞ –∑–∞ –¥–µ–Ω—å –¥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ (–∑–¥–µ—Å—å - —É–ø—Ä–æ—â—ë–Ω–Ω—ã–π –ø—Ä–∏–º–µ—Ä).
    –í —Ä–µ–∞–ª—å–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–µ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ APScheduler –∏ —Ç.–ø.
    """
    # –ü—Ä–∏–º–µ—Ä: –∂–¥–µ–º 2 –º–∏–Ω—É—Ç—ã, –ø–æ—Ç–æ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
    await asyncio.sleep(120)  # 2 –º–∏–Ω—É—Ç—ã
    text = (
        "–ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π, –∑–∞ –¥–µ–Ω—å (–≤ –Ω–∞—à–µ–π –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏ —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã) –¥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —è –∑–∞–±–æ—Ç–ª–∏–≤–æ –Ω–∞–ø–æ–º–Ω—é —Ç–µ–±–µ –æ –Ω–µ–π.\n"
        "–ß—Ç–æ–±—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ –µ—â—ë –±–æ–ª–µ–µ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ, –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–∏ –≤–æ–ø—Ä–æ—Å—ã –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ ‚ù§Ô∏è\n"
        "–ñ–¥–µ–º —Ç–µ–±—è!"
    )
    await bot.send_message(user_id, text)

async def remind_consultation_in_day(user_id: int, date_str: str, time_str: str):
    """
    –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤ –¥–µ–Ω—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ (—É–ø—Ä–æ—â—ë–Ω–Ω—ã–π –ø—Ä–∏–º–µ—Ä).
    """
    # –ñ–¥–µ–º –µ—â—ë 2 –º–∏–Ω—É—Ç—ã
    await asyncio.sleep(120)
    text = (
        f"–ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ —Å–µ–≥–æ–¥–Ω—è –≤ {time_str} —Å–æ—Å—Ç–æ–∏—Ç—Å—è –≤–∞—à–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å —ç–∫—Å–ø–µ—Ä—Ç–æ–º. –£–≤–∏–¥–∏–º—Å—è!‚ù§Ô∏è\n"
        "–ü–æ–º–Ω–∏, —á—Ç–æ —á–∞—Å—Ç—å –≤–æ–ø—Ä–æ—Å–æ–≤ –º–æ–∂–Ω–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –∑–∞—Ä–∞–Ω–µ–µ!"
    )
    await bot.send_message(user_id, text)


# ============================================================
# –ì–ª–∞–≤–Ω—ã–π ¬´—Å—Ç–∞—Ä—Ç¬ª - –∑–¥–µ—Å—å –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π
# ============================================================
@dp.message(Command("start"))
async def send_welcome(message: types.Message, state: FSMContext):
    """
    1 —à–∞–≥: –ü—Ä–∏–≤–µ—Ç! üòâ ... –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞–∂–º–∏ /start
    2 —à–∞–≥: –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –¢–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª...
    –ü–æ—Ç–æ–º –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
    """
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ state, –µ—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å
    await state.clear()

    text = (" –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à Telegram-–∫–∞–Ω–∞–ª https://t.me/INTECOcertification, —á—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–π ")

    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è!", callback_data="check_subscribe"))

    await message.answer_photo(
        URLInputFile("https://i.ibb.co/JW5hb4cv/123321.jpg"),
        caption=text,
        reply_markup=builder.as_markup()
    )
    #await message.answer(text, reply_markup=builder.as_markup())

    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç–ª–æ–∂–µ–Ω–Ω—É—é –∑–∞–¥–∞—á—É –Ω–∞ 15 –º–∏–Ω (–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ) - –µ—Å–ª–∏ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è
    if message.from_user.id not in pending_tasks_15min:
        task = asyncio.create_task(reminder_after_15min(message.from_user.id, state))
        pending_tasks_15min[message.from_user.id] = task


@dp.callback_query(F.data == "check_subscribe")
async def process_check_subscribe(callback_query: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è "–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è!"
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª.
    """
    user_id = callback_query.from_user.id
    # –û—Ç–º–µ–Ω—è–µ–º —Ç–∞—Å–∫ –Ω–∞ 15 –º–∏–Ω—É—Ç (–µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å), —á—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    if user_id in pending_tasks_15min:
        pending_tasks_15min[user_id].cancel()
        del pending_tasks_15min[user_id]

    is_subscribed = await check_user_subscription(user_id)
    if is_subscribed:
        # 4 —à–∞–≥: –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è: "–ê —Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏, –∫–∞–∫–æ–π —É —Ç–µ–±—è —Ç–æ–≤–∞—Ä..."
        #await callback_query.message.delete()
        await send_main_menu(callback_query.message)

        # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É –Ω–∞ 2 —á–∞—Å–∞ (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–¥—Ä—É–≥ "–∑–∞–≤–∏—Å–Ω–µ—Ç")
        if user_id not in pending_tasks_2h:
            task = asyncio.create_task(reminder_after_2h(user_id))
            pending_tasks_2h[user_id] = task
    else:
        # –ù–µ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è -> –ß–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç –Ω–∞–ø–æ–º–Ω–∏–º (—É–∂–µ –∏–¥—ë—Ç —Ç–∞—Å–∫)
        await callback_query.answer("–ü–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –µ—â–µ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å. –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞!", show_alert=True)


@dp.callback_query(F.data == "check_again_subscribe")
async def process_check_again_subscribe(callback_query: CallbackQuery, state: FSMContext):
    """
    –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ —á–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ.
    """
    user_id = callback_query.from_user.id
    is_subscribed = await check_user_subscription(user_id)
    if is_subscribed:
        #await callback_query.message.delete()
        await send_main_menu(callback_query.message)

        # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É –Ω–∞ 2 —á–∞—Å–∞ (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–¥—Ä—É–≥ "–∑–∞–≤–∏—Å–Ω–µ—Ç")
        if user_id not in pending_tasks_2h:
            task = asyncio.create_task(reminder_after_2h(user_id))
            pending_tasks_2h[user_id] = task
    else:
        await callback_query.answer("–í—ã –≤—Å—ë –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª :(", show_alert=True)


# ============================================================
# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚Äì –≤—ã–±–æ—Ä —Ç–æ–≤–∞—Ä–∞ (—à–∞–≥ 4, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω)
# ============================================================
async def send_main_menu(message: types.Message):
    """
    6 —à–∞–≥: –ò–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤
    """
    text = ("–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏, –∫–∞–∫–æ–π —É —Ç–µ–±—è —Ç–æ–≤–∞—Ä, –∞ —è –ø–æ–¥—Å–∫–∞–∂—É, –∫–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω—ã –¥–ª—è –µ–≥–æ –ø—Ä–æ–¥–∞–∂–∏ ‚úÖ")
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="–û–¥–µ–∂–¥–∞ –∏ –æ–±—É–≤—å", callback_data="button1"))
    builder.add(types.InlineKeyboardButton(text="–ö–æ—Å–º–µ—Ç–∏–∫–∞ –∏ –ø–∞—Ä—Ñ—é–º–µ—Ä–∏—è", callback_data="button2"))
    builder.add(types.InlineKeyboardButton(text="–ü—Ä–æ–¥—É–∫—Ç—ã –ø–∏—Ç–∞–Ω–∏—è", callback_data="button3"))
    builder.add(types.InlineKeyboardButton(text="–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –∏ –≥–∞–¥–∂–µ—Ç—ã", callback_data="button4"))
    builder.add(types.InlineKeyboardButton(text="–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –∏ —Ä–µ–º–æ–Ω—Ç", callback_data="button5"))
    builder.add(types.InlineKeyboardButton(text="–¢–æ–≤–∞—Ä—ã –¥–ª—è –¥–æ–º–∞", callback_data="button88"))
    builder.add(types.InlineKeyboardButton(text="–î–µ—Ç—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã", callback_data="button6"))
    builder.add(types.InlineKeyboardButton(text="–°–ø–æ—Ä—Ç –∏ –∞–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö", callback_data="button7"))
    builder.add(types.InlineKeyboardButton(text="–¢–æ–≤–∞—Ä—ã –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö", callback_data="button8"))
    builder.add(types.InlineKeyboardButton(text="–ê–≤—Ç–æ—Ç–æ–≤–∞—Ä—ã", callback_data="button9"))
    builder.add(types.InlineKeyboardButton(text="–ë—ã—Ç–æ–≤–∞—è —Ö–∏–º–∏—è", callback_data="button77"))
    builder.add(types.InlineKeyboardButton(text="–î—Ä—É–≥–æ–µ", callback_data="button10"))
    builder.add(types.InlineKeyboardButton(text="–ï—â—ë –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–∏–ª—Å—è", callback_data="button11114241"))
    builder.adjust(1)

    await message.answer_photo(
        URLInputFile("https://i.ibb.co/DDgzCxwB/018ce401-06e5-4dd3-8c26-3518f63c4ab2.jpg"),
        caption=text,
        reply_markup=builder.as_markup()
    )

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–Ω–æ–≤–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–µ—Ç, –∑–Ω–∞—á–∏—Ç –æ–Ω –Ω–µ "–∑–∞–≤–∏—Å" => –æ—Ç–º–µ–Ω—è–µ–º –∑–∞–¥–∞—á—É –Ω–∞ 2 —á–∞—Å–∞ (–µ—Å–ª–∏ –±—ã–ª–∞)
    user_id = message.from_user.id
    if user_id in pending_tasks_2h:
        pending_tasks_2h[user_id].cancel()
        del pending_tasks_2h[user_id]

    # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É - —á–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç (–ø–æ—Å–ª–µ –∫–æ–Ω–µ—á–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞) –¥–∞—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–æ —Å–¥–µ–ª–∞–µ–º —ç—Ç–æ,
    # –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —á—Ç–æ-—Ç–æ –≤—ã–±–µ—Ä–µ—Ç (—Å–º. –Ω–∏–∂–µ –ª–æ–≥–∏–∫—É).


@dp.callback_query(F.data == 'go_to_main_menu')
async def go_to_main_menu_callback(callback_query: CallbackQuery):
    """
    –ï—Å–ª–∏ —é–∑–µ—Ä—É –ø—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –æ–Ω –Ω–∞–∂–∞–ª "–í—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä"
    """
    #await callback_query.message.delete()
    await send_main_menu(callback_query.message)


# ============================================================
# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ–≤–∞—Ä–æ–≤
# ============================================================

@dp.callback_query(lambda c: c.data == 'button1')
async def process_button1(callback_query: types.CallbackQuery):
    """
    –û–¥–µ–∂–¥–∞ –∏ –æ–±—É–≤—å
    """
   #await callback_query.message.delete()
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="–û–¥–µ–∂–¥–∞ –∏–ª–∏ –æ–±—É–≤—å –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö", callback_data="button01"))
    builder.add(types.InlineKeyboardButton(text="–û–¥–µ–∂–¥–∞ –∏–ª–∏ –æ–±—É–≤—å –¥–ª—è –¥–µ—Ç–µ–π", callback_data="button88_child"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_main_menu"))
    builder.adjust(1)
    await callback_query.message.answer("–û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π —É—Ç–æ—á–Ω–∏–º, –∫–∞–∫–∞—è –∏–º–µ–Ω–Ω–æ –æ–¥–µ–∂–¥–∞ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=builder.as_markup())

    # –û—Ç–º–µ–Ω—è–µ–º –∑–∞–¥–∞—á—É –Ω–∞ 2 —á–∞—Å–∞ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—É—é ‚Äì –µ—Å–ª–∏ —Å–Ω–æ–≤–∞ –Ω–µ –≤—ã–±–µ—Ä–µ—Ç –Ω–∏—á–µ–≥–æ
    user_id = callback_query.from_user.id
    if user_id in pending_tasks_2h:
        pending_tasks_2h[user_id].cancel()
        del pending_tasks_2h[user_id]
    pending_tasks_2h[user_id] = asyncio.create_task(reminder_after_2h(user_id))


@dp.callback_query(lambda c: c.data == 'button2')
async def process_button2(callback_query: types.CallbackQuery):
    """
    –ö–æ—Å–º–µ—Ç–∏–∫–∞ –∏ –ø–∞—Ä—Ñ—é–º–µ—Ä–∏—è
    """
    #await callback_query.message.delete()
    text = ("–ö–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –Ω–∞ –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏ –æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ –ø–æ –¢–† –¢–° 009/2011, "
            "–Ω–æ –µ—Å—Ç—å —á–∞—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä–∞—è —Ç—Ä–µ–±—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—É—é –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é (–°–ì–†), "
            "–∞ —Ç–∞–∫–∂–µ –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∞ –ß–µ—Å—Ç–Ω—ã–π –∑–Ω–∞–∫.")

    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", callback_data="button1111"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.add(types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º", url="https://t.me/intecocert"))
    builder.adjust(1)
    await callback_query.message.answer_photo(
        URLInputFile("https://i.ibb.co/whBxCPTV/412cf3dc-0205-474e-8761-f669492109b0.png"),
        caption=text
    )

    await asyncio.sleep(10)

    text = ("–¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å, –∫–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞–≤–∞—Ç—å –±–µ–∑ —à—Ç—Ä–∞—Ñ–æ–≤. "
        "–°–∞–º–æ–µ –≤—Ä–µ–º—è —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å!\n\n"
        "–¢–∞–∫ –∫–∞–∫ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Å—Ä–æ–∫–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ä–∞–∑–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤, —è –ø–µ—Ä–µ–¥–∞–º —Ç–µ–±—è –≤ –Ω–∞–¥—ë–∂–Ω—ã–µ —Ä—É–∫–∏ "
        "—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º, "
        "–∑–∞–ø–∏—à–∏—Å—å –Ω–∞ –æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é. üì≤")

    await callback_query.message.answer_photo(
        URLInputFile("https://i.ibb.co/GftshF5Q/691d121a-c832-495e-a7fa-0417946c09a7-1.jpg"),
        caption=text,
        reply_markup=builder.as_markup()
    )

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ç–∞–π–º–µ—Ä –Ω–∞ 15 –º–∏–Ω—É—Ç (–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏),
    # —Ç.–∫. –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø–æ–ª—É—á–∏–ª –∏—Ç–æ–≥–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    user_id = callback_query.from_user.id
    if user_id in pending_tasks_after_final:
        pending_tasks_after_final[user_id].cancel()
        del pending_tasks_after_final[user_id]
    pending_tasks_after_final[user_id] = asyncio.create_task(final_reminder_after_15min(user_id))


@dp.callback_query(lambda c: c.data == 'button3')
async def process_button3(callback_query: types.CallbackQuery):
    """
    –ü—Ä–æ–¥—É–∫—Ç—ã –ø–∏—Ç–∞–Ω–∏—è
    """
    #await callback_query.message.delete()
    text = ("–ö–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –Ω–∞ –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏ –æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ –ø–æ –¢–† –¢–° 021/2011, "
            "–∞ —Ç–∞–∫–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –•–ê–°–°–ü (HACCP). –ù–∞ —á–∞—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–∏—Ç–∞–Ω–∏—è –Ω—É–∂–Ω–∞ –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∞ –ß–µ—Å—Ç–Ω—ã–π –∑–Ω–∞–∫.")


    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", callback_data="button1111"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.add(types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º", url="https://t.me/intecocert"))
    builder.adjust(1)


    await callback_query.message.answer_photo(
        URLInputFile("https://i.ibb.co/jPdGvxvY/b557868d-277c-4629-a90b-d4b151243e07.png"),
        caption=text
    )
    await asyncio.sleep(10)
    text = ("–¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å, –∫–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞–≤–∞—Ç—å –±–µ–∑ —à—Ç—Ä–∞—Ñ–æ–≤. "
        "–°–∞–º–æ–µ –≤—Ä–µ–º—è —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å!\n\n"
        "–¢–∞–∫ –∫–∞–∫ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Å—Ä–æ–∫–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ä–∞–∑–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤, —è –ø–µ—Ä–µ–¥–∞–º —Ç–µ–±—è –≤ –Ω–∞–¥—ë–∂–Ω—ã–µ —Ä—É–∫–∏ "
        "—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º, "
        "–∑–∞–ø–∏—à–∏—Å—å –Ω–∞ –æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é. üì≤")

    await callback_query.message.answer_photo(
        URLInputFile("https://i.ibb.co/GftshF5Q/691d121a-c832-495e-a7fa-0417946c09a7-1.jpg"),
        caption=text,
        reply_markup=builder.as_markup()
    )

    user_id = callback_query.from_user.id
    if user_id in pending_tasks_after_final:
        pending_tasks_after_final[user_id].cancel()
        del pending_tasks_after_final[user_id]
    pending_tasks_after_final[user_id] = asyncio.create_task(final_reminder_after_15min(user_id))


@dp.callback_query(lambda c: c.data == 'button4')
async def process_button4(callback_query: types.CallbackQuery):
    """
    –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –∏ –≥–∞–¥–∂–µ—Ç—ã
    """
    #await callback_query.message.delete()
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="–î–ª—è –±—ã—Ç–æ–≤–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è", callback_data="button441"))
    builder.add(types.InlineKeyboardButton(text="–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è", callback_data="button442"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.adjust(1)
    await callback_query.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏ –∏ –≥–∞–¥–∂–µ—Ç–æ–≤:", reply_markup=builder.as_markup())

    user_id = callback_query.from_user.id
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º 2-—á–∞—Å–æ–≤–æ–π —Ç–∞–π–º–µ—Ä
    if user_id in pending_tasks_2h:
        pending_tasks_2h[user_id].cancel()
        del pending_tasks_2h[user_id]
    pending_tasks_2h[user_id] = asyncio.create_task(reminder_after_2h(user_id))


@dp.callback_query(lambda c: c.data == 'button5')
async def process_button5(callback_query: types.CallbackQuery):
    """
    –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –∏ —Ä–µ–º–æ–Ω—Ç
    """
    #await callback_query.message.delete()
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text='–î–ª—è –æ–±—â–µ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–∞–±–æ—Ç', callback_data="button551"))
    builder.add(types.InlineKeyboardButton(text="–î–ª—è –¥–æ—Ä–æ–∂–Ω–æ–≥–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å–≤–∞", callback_data="button552"))
    builder.add(types.InlineKeyboardButton(text='–î–ª—è –æ—Ç–¥–µ–ª–æ—á–Ω—ã—Ö —Ä–∞–±–æ—Ç', callback_data="button553"))
    builder.add(types.InlineKeyboardButton(text='–ú–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏', callback_data="button554"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.adjust(1)
    await callback_query.message.answer("–ö–∞–∫–∏–º –≤–∏–¥–æ–º —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –≤—ã –∑–∞–Ω–∏–º–∞–µ—Ç–µ—Å—å?", reply_markup=builder.as_markup())

    user_id = callback_query.from_user.id
    if user_id in pending_tasks_2h:
        pending_tasks_2h[user_id].cancel()
        del pending_tasks_2h[user_id]
    pending_tasks_2h[user_id] = asyncio.create_task(reminder_after_2h(user_id))


@dp.callback_query(lambda c: c.data == 'button88')
async def process_button88(callback_query: types.CallbackQuery):
    """
    –¢–æ–≤–∞—Ä—ã –¥–ª—è –¥–æ–º–∞
    """
    #await callback_query.message.delete()
    text = ("–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?")
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text='–ú–µ–±–µ–ª—å', callback_data="button66"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.adjust(1)

    await callback_query.message.answer(text, reply_markup=builder.as_markup())

    user_id = callback_query.from_user.id
    if user_id in pending_tasks_2h:
        pending_tasks_2h[user_id].cancel()
        del pending_tasks_2h[user_id]
    pending_tasks_2h[user_id] = asyncio.create_task(reminder_after_2h(user_id))


@dp.callback_query(lambda c: c.data == 'button6')
async def process_button6(callback_query: types.CallbackQuery):
    """
    –î–µ—Ç—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã
    """
    #await callback_query.message.delete()
    text = ("–ö–∞–∫ –ø—Ä–∞–≤–∏–ª–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –ø–æ –¢–† –¢–° 007/2011, "
            "–¥–ª—è –∏–≥—Ä—É—à–µ–∫ –¢–† –¢–° 008/2011. –ù–∞ —Ä—è–¥ –ø—Ä–æ–¥—É–∫—Ü–∏–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–∞ "
            "–æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–°–ì–†), –∞ —Ç–∞–∫–∂–µ –Ω–∞ —á–∞—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ü–∏–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∞ –ß–µ—Å—Ç–Ω—ã–π –∑–Ω–∞–∫")

    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", callback_data="button1111"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.add(types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º", url="https://t.me/intecocert"))
    builder.adjust(1)

    imageurl = URLInputFile('https://i.ibb.co/VYgCJ4pY/34befe44-db36-4511-956c-91a9ffcacc8b.png')
    await callback_query.message.answer_photo(
        imageurl,
        caption=text
    )
    await asyncio.sleep(10)
    text = ("–¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å, –∫–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞–≤–∞—Ç—å –±–µ–∑ —à—Ç—Ä–∞—Ñ–æ–≤. "
        "–°–∞–º–æ–µ –≤—Ä–µ–º—è —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å!\n\n"
        "–¢–∞–∫ –∫–∞–∫ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Å—Ä–æ–∫–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ä–∞–∑–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤, —è –ø–µ—Ä–µ–¥–∞–º —Ç–µ–±—è –≤ –Ω–∞–¥—ë–∂–Ω—ã–µ —Ä—É–∫–∏ "
        "—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º, "
        "–∑–∞–ø–∏—à–∏—Å—å –Ω–∞ –æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é. üì≤")

    await callback_query.message.answer_photo(
        URLInputFile("https://i.ibb.co/GftshF5Q/691d121a-c832-495e-a7fa-0417946c09a7-1.jpg"),
        caption=text,
        reply_markup=builder.as_markup()
    )

    user_id = callback_query.from_user.id
    if user_id in pending_tasks_after_final:
        pending_tasks_after_final[user_id].cancel()
    pending_tasks_after_final[user_id] = asyncio.create_task(final_reminder_after_15min(user_id))


@dp.callback_query(lambda c: c.data == 'button7')
async def process_button7(callback_query: types.CallbackQuery):
    """
    –°–ø–æ—Ä—Ç –∏ –∞–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö
    """
    #await callback_query.message.delete()
    text = ("–ö–∞–∫ –ø—Ä–∞–≤–∏–ª–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∫–∞–∑–Ω–æ–≥–æ –ø–∏—Å—å–º–∞ (–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è), "
            "–ø—Ä–∏ —ç—Ç–æ–º –Ω–∞ —Ä—è–¥ —Ç–æ–≤–∞—Ä–æ–≤ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è.")

    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", callback_data="button1111"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.add(types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º", url="https://t.me/intecocert"))
    builder.adjust(1)

    imageurl = URLInputFile('https://i.ibb.co/CKgRDd06/76a18ecd-18f5-4921-9f66-dd246e6bdb38.png')

    await callback_query.message.answer_photo(
        imageurl,
        caption=text
    )
    await asyncio.sleep(10)
    text = ("–¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å, –∫–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞–≤–∞—Ç—å –±–µ–∑ —à—Ç—Ä–∞—Ñ–æ–≤. "
        "–°–∞–º–æ–µ –≤—Ä–µ–º—è —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å!\n\n"
        "–¢–∞–∫ –∫–∞–∫ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Å—Ä–æ–∫–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ä–∞–∑–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤, —è –ø–µ—Ä–µ–¥–∞–º —Ç–µ–±—è –≤ –Ω–∞–¥—ë–∂–Ω—ã–µ —Ä—É–∫–∏ "
        "—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º, "
        "–∑–∞–ø–∏—à–∏—Å—å –Ω–∞ –æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é. üì≤")

    await callback_query.message.answer_photo(
        URLInputFile("https://i.ibb.co/GftshF5Q/691d121a-c832-495e-a7fa-0417946c09a7-1.jpg"),
        caption=text,
        reply_markup=builder.as_markup()
    )

    user_id = callback_query.from_user.id
    if user_id in pending_tasks_after_final:
        pending_tasks_after_final[user_id].cancel()
    pending_tasks_after_final[user_id] = asyncio.create_task(final_reminder_after_15min(user_id))


@dp.callback_query(lambda c: c.data == 'button8')
async def process_button8(callback_query: types.CallbackQuery):
    """
    –¢–æ–≤–∞—Ä—ã –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö
    """
    #await callback_query.message.delete()
    text = ("–ö–∞–∫ –ø—Ä–∞–≤–∏–ª–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∫–∞–∑–Ω–æ–≥–æ –ø–∏—Å—å–º–∞ (–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è), "
            "–ø—Ä–∏ —ç—Ç–æ–º –Ω–∞ —Ä—è–¥ —Ç–æ–≤–∞—Ä–æ–≤ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è, –∞ —Ç–∞–∫–∂–µ –Ω–∞ —á–∞—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ü–∏–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∞ –ß–µ—Å—Ç–Ω—ã–π –∑–Ω–∞–∫")


    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", callback_data="button1111"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.add(types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º", url="https://t.me/intecocert"))
    builder.adjust(1)

    imageurl = URLInputFile('https://i.ibb.co/XrSwWYYt/image.jpg')

    await callback_query.message.answer_photo(
        imageurl,
        caption=text
    )
    await asyncio.sleep(10)
    text = ("–¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å, –∫–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞–≤–∞—Ç—å –±–µ–∑ —à—Ç—Ä–∞—Ñ–æ–≤. "
        "–°–∞–º–æ–µ –≤—Ä–µ–º—è —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å!\n\n"
        "–¢–∞–∫ –∫–∞–∫ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Å—Ä–æ–∫–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ä–∞–∑–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤, —è –ø–µ—Ä–µ–¥–∞–º —Ç–µ–±—è –≤ –Ω–∞–¥—ë–∂–Ω—ã–µ —Ä—É–∫–∏ "
        "—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º, "
        "–∑–∞–ø–∏—à–∏—Å—å –Ω–∞ –æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é. üì≤")

    await callback_query.message.answer_photo(
        URLInputFile("https://i.ibb.co/GftshF5Q/691d121a-c832-495e-a7fa-0417946c09a7-1.jpg"),
        caption=text,
        reply_markup=builder.as_markup()
    )

    user_id = callback_query.from_user.id
    if user_id in pending_tasks_after_final:
        pending_tasks_after_final[user_id].cancel()
    pending_tasks_after_final[user_id] = asyncio.create_task(final_reminder_after_15min(user_id))


@dp.callback_query(lambda c: c.data == 'button9')
async def process_button9(callback_query: types.CallbackQuery):
    """
    –ê–≤—Ç–æ—Ç–æ–≤–∞—Ä—ã
    """
    #await callback_query.message.delete()
    text = ("–ö–∞–∫ –ø—Ä–∞–≤–∏–ª–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∫–∞–∑–Ω–æ–≥–æ –ø–∏—Å—å–º–∞ (–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è), "
            "–ø—Ä–∏ —ç—Ç–æ–º –Ω–∞ —Ä—è–¥ —Ç–æ–≤–∞—Ä–æ–≤ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –ø–æ –¢–† –¢–° 018/2011 "
            "\"–û –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∫–æ–ª–µ—Å–Ω—ã—Ö —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤\".")

    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", callback_data="button1111"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.add(types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º", url="https://t.me/intecocert"))
    builder.adjust(1)

    imageurl = URLInputFile('https://i.ibb.co/svpdTSKn/c866f266-cff0-4707-9195-083e88ecd539.png')

    await callback_query.message.answer_photo(
        imageurl,
        caption=text
    )
    await asyncio.sleep(10)
    text = ("–¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å, –∫–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞–≤–∞—Ç—å –±–µ–∑ —à—Ç—Ä–∞—Ñ–æ–≤. "
        "–°–∞–º–æ–µ –≤—Ä–µ–º—è —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å!\n\n"
        "–¢–∞–∫ –∫–∞–∫ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Å—Ä–æ–∫–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ä–∞–∑–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤, —è –ø–µ—Ä–µ–¥–∞–º —Ç–µ–±—è –≤ –Ω–∞–¥—ë–∂–Ω—ã–µ —Ä—É–∫–∏ "
        "—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º, "
        "–∑–∞–ø–∏—à–∏—Å—å –Ω–∞ –æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é. üì≤")

    await callback_query.message.answer_photo(
        URLInputFile("https://i.ibb.co/GftshF5Q/691d121a-c832-495e-a7fa-0417946c09a7-1.jpg"),
        caption=text,
        reply_markup=builder.as_markup()
    )

    user_id = callback_query.from_user.id
    if user_id in pending_tasks_after_final:
        pending_tasks_after_final[user_id].cancel()
    pending_tasks_after_final[user_id] = asyncio.create_task(final_reminder_after_15min(user_id))


@dp.callback_query(lambda c: c.data == 'button77')
async def process_button77(callback_query: types.CallbackQuery):
    """
    –ë—ã—Ç–æ–≤–∞—è —Ö–∏–º–∏—è
    """
    #await callback_query.message.delete()
    text = ("–ö–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–∞ –æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–°–ì–†) "
            "–∏ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏ –ì–û–°–¢ –†., –∞ —Ç–∞–∫–∂–µ –Ω–∞ —á–∞—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ü–∏–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∞ –ß–µ—Å—Ç–Ω—ã–π –∑–Ω–∞–∫.")

    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", callback_data="button1111"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.add(types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º", url="https://t.me/intecocert"))
    builder.adjust(1)

    imageurl = URLInputFile('https://i.ibb.co/dw0W4y3W/5b1180c2-fecb-40d2-8bd2-b9308136d952.png')
    await callback_query.message.answer_photo(
        imageurl,
        caption=text
    )
    await asyncio.sleep(10)
    text = ("–¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å, –∫–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞–≤–∞—Ç—å –±–µ–∑ —à—Ç—Ä–∞—Ñ–æ–≤. "
        "–°–∞–º–æ–µ –≤—Ä–µ–º—è —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å!\n\n"
        "–¢–∞–∫ –∫–∞–∫ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Å—Ä–æ–∫–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ä–∞–∑–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤, —è –ø–µ—Ä–µ–¥–∞–º —Ç–µ–±—è –≤ –Ω–∞–¥—ë–∂–Ω—ã–µ —Ä—É–∫–∏ "
        "—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º, "
        "–∑–∞–ø–∏—à–∏—Å—å –Ω–∞ –æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é. üì≤")

    await callback_query.message.answer_photo(
        URLInputFile("https://i.ibb.co/GftshF5Q/691d121a-c832-495e-a7fa-0417946c09a7-1.jpg"),
        caption=text,
        reply_markup=builder.as_markup()
    )

    user_id = callback_query.from_user.id
    if user_id in pending_tasks_after_final:
        pending_tasks_after_final[user_id].cancel()
    pending_tasks_after_final[user_id] = asyncio.create_task(final_reminder_after_15min(user_id))


# ============================================================
# "–î—Ä—É–≥–æ–µ" - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Å–∞–º —Ç–æ–≤–∞—Ä
# ============================================================

class UserState(StatesGroup):
    tov = State()
    phon = State()
    name = State()

@dp.callback_query(lambda c: c.data == 'button10')
async def process_button10(callback_query: types.CallbackQuery, state: FSMContext):
    """
    –î—Ä—É–≥–æ–µ
    """
    #await callback_query.message.delete()
    await callback_query.message.answer_photo(
        URLInputFile("https://i.ibb.co/9kfKPjdp/F6697cee-e64f-49a5-b9e8-ff52eeb173ec-1.jpg"),
        caption="–ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–¥—É–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä—É—é –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å"
    )
    await state.set_state(UserState.tov)


@dp.message(UserState.tov)
async def forward_message(message: types.Message, state: FSMContext):
    """
    –ö–∞–∫ —è –º–æ–≥—É –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?
    """
    await state.update_data(tov=message.text)
    await message.answer("–ö–∞–∫ —è –º–æ–≥—É –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?")
    await state.set_state(UserState.name)

@dp.message(UserState.name)
async def forward_message(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer(
        "–£–∫–∞–∂–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω, —á—Ç–æ–±—ã —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –º–æ–≥ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞–º–∏ —É–¥–æ–±–Ω—ã–º –¥–ª—è –≤–∞—Å —Å–ø–æ—Å–æ–±–æ–º")
    await state.set_state(UserState.phon)


@dp.message(UserState.phon)
async def forward_message1(message: Message, state: FSMContext):
    # 1) —Ç–µ–ª–µ—Ñ–æ–Ω –∫–ª–∞–¥—ë–º –≤ state
    await state.update_data(phon=message.text)
    data = await state.get_data()

    # 2)  ‚¨á  —Å–æ—Ö—Ä–∞–Ω—è–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ SQLite
    await save_user(message, data)       # ‚Üê –Ω–æ–≤–∏–Ω–∫–∞

    # 3) —Å–ª—É–∂–µ–±–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É (–æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –±—ã–ª–æ)
    await bot.send_message(
        1495460633,
        str(data) + ' –æ—Ç —é–∑–µ—Ä–∞ ' + str(message.from_user.id)
    )

    # 4) –æ—á–∏—â–∞–µ–º state –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
    await state.clear()

    # ... –¥–∞–ª—å—à–µ –∫–Ω–æ–ø–∫–∏ ¬´–ü–æ–∑–≤–æ–Ω–∏—Ç—å / WhatsApp / Telegram¬ª (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)



@dp.callback_query(F.data == 'button123')
async def process_button99(callback: CallbackQuery):
    await bot.send_message(1495460633, '–ü–æ–∑–≤–æ–Ω–∏—Ç—å —é–∑–µ—Ä—É ' + str(callback.from_user.id))
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.adjust(1)
    await callback.message.answer("–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –¥–æ–≤–µ—Ä–∏–µ –∫ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏! –ü–µ—Ä–µ–¥–∞—é –≤–∞—à –≤–æ–ø—Ä–æ—Å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É –ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏, –æ–Ω —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –∏ –æ—Ç–≤–µ—Ç–∏—Ç –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ä–∞–∑—Ä–µ—à–∏—Ç–µ–ª—å–Ω—ã–º –¥–æ–∫—É–º–µ–Ω—Ç–∞–º", reply_markup=builder.as_markup())


    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ç–∞–π–º–µ—Ä (–ø–æ—Å–ª–µ –∫–æ–Ω–µ—á–Ω–æ–≥–æ —à–∞–≥–∞)
    #user_id = callback.from_user.id
    #if user_id in pending_tasks_after_final:
    #    pending_tasks_after_final[user_id].cancel()
    #pending_tasks_after_final[user_id] = asyncio.create_task(final_reminder_after_15min(user_id))


@dp.callback_query(F.data == 'button124')
async def process_button99(callback: CallbackQuery):
    await bot.send_message(1495460633, '–í –≤–∞—Ç—Å–∞–ø —é–∑–µ—Ä—É ' + str(callback.from_user.id))
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.adjust(1)
    await callback.message.answer(
        "–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –¥–æ–≤–µ—Ä–∏–µ –∫ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏! –ü–µ—Ä–µ–¥–∞—é –≤–∞—à –≤–æ–ø—Ä–æ—Å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É –ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏, –æ–Ω —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –∏ –æ—Ç–≤–µ—Ç–∏—Ç –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ä–∞–∑—Ä–µ—à–∏—Ç–µ–ª—å–Ω—ã–º –¥–æ–∫—É–º–µ–Ω—Ç–∞–º",
        reply_markup=builder.as_markup())

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ç–∞–π–º–µ—Ä (–ø–æ—Å–ª–µ –∫–æ–Ω–µ—á–Ω–æ–≥–æ —à–∞–≥–∞)
    # user_id = callback.from_user.id
    # if user_id in pending_tasks_after_final:
    #    pending_tasks_after_final[user_id].cancel()
    # pending_tasks_after_final[user_id] = asyncio.create_task(final_reminder_after_15min(user_id))


@dp.callback_query(F.data == 'button125')
async def process_button99(callback: CallbackQuery):
    await bot.send_message(1495460633, '–í —Ç–≥ —é–∑–µ—Ä—É ' + str(callback.from_user.id))
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.adjust(1)
    await callback.message.answer(
        "–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –¥–æ–≤–µ—Ä–∏–µ –∫ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏! –ü–µ—Ä–µ–¥–∞—é –≤–∞—à –≤–æ–ø—Ä–æ—Å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É –ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏, –æ–Ω —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –∏ –æ—Ç–≤–µ—Ç–∏—Ç –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ä–∞–∑—Ä–µ—à–∏—Ç–µ–ª—å–Ω—ã–º –¥–æ–∫—É–º–µ–Ω—Ç–∞–º",
        reply_markup=builder.as_markup())

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ç–∞–π–º–µ—Ä (–ø–æ—Å–ª–µ –∫–æ–Ω–µ—á–Ω–æ–≥–æ —à–∞–≥–∞)
    # user_id = callback.from_user.id
    # if user_id in pending_tasks_after_final:
    #    pending_tasks_after_final[user_id].cancel()
    # pending_tasks_after_final[user_id] = asyncio.create_task(final_reminder_after_15min(user_id))

# @dp.message(UserState.name)
# async def forward_message_name(message: types.Message, state: FSMContext):
#     """
#     –£–∫–∞–∂–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω...
#     """
#     await state.update_data(name=message.text)
#     await message.answer("–£–∫–∞–∂–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω, —á—Ç–æ–±—ã —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –º–æ–≥ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞–º–∏ "
#                          "—É–¥–æ–±–Ω—ã–º –¥–ª—è –≤–∞—Å —Å–ø–æ—Å–æ–±–æ–º")
#     await state.set_state(UserState.phon)
#
#
# @dp.message(UserState.phon)
# async def forward_message_phone(message: Message, state: FSMContext):
#     """
#     –ó–∞–≤–µ—Ä—à–∞–µ–º "–î—Ä—É–≥–æ–µ"
#     """
#     await state.update_data(phon=message.text)
#     data = await state.get_data()
#     await bot.send_message(
#         1623431342,
#         str(data) + ' –æ—Ç —é–∑–µ—Ä–∞ ' + str(message.from_user.id) +
#         '. –ù—É–∂–Ω–æ —Å–≤—è–∑–∞—Ç—å—Å—è –ø–æ –≤–æ–ø—Ä–æ—Å—É "–î—Ä—É–≥–æ–µ"'
#     )
#     await state.clear()
#     await asyncio.sleep(6)
#     text = ("–¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å, –∫–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞–≤–∞—Ç—å –±–µ–∑ —à—Ç—Ä–∞—Ñ–æ–≤. "
#         "–°–∞–º–æ–µ –≤—Ä–µ–º—è —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å!\n\n"
#         "–¢–∞–∫ –∫–∞–∫ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Å—Ä–æ–∫–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ä–∞–∑–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤, —è –ø–µ—Ä–µ–¥–∞–º —Ç–µ–±—è –≤ –Ω–∞–¥—ë–∂–Ω—ã–µ —Ä—É–∫–∏ "
#         "—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º, "
#         "–∑–∞–ø–∏—à–∏—Å—å –Ω–∞ –æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é. üì≤")
#
#     builder = InlineKeyboardBuilder()
#     builder.add(types.InlineKeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", callback_data="button1111"))
#     builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
#     builder.add(types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º", url="https://t.me/intecocert"))
#     builder.adjust(1)
#
#     await message.answer_photo(
#         URLInputFile("https://i.ibb.co/GftshF5Q/691d121a-c832-495e-a7fa-0417946c09a7-1.jpg"),
#         caption=text,
#         reply_markup=builder.as_markup()
#     )
#
#     # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ç–∞–π–º–µ—Ä (–ø–æ—Å–ª–µ –∫–æ–Ω–µ—á–Ω–æ–≥–æ —à–∞–≥–∞)
#     user_id = message.from_user.id
#     if user_id in pending_tasks_after_final:
#         pending_tasks_after_final[user_id].cancel()
#     pending_tasks_after_final[user_id] = asyncio.create_task(final_reminder_after_15min(user_id))


# ============================================================
# –ï—â—ë –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–∏–ª—Å—è
# ============================================================
@dp.callback_query(F.data == 'button11114241')
async def command_start_handler(callback: CallbackQuery) -> None:
    """
    –ü—Ä–µ–¥–ª–∞–≥–∞—é –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é, —á—Ç–æ–±—ã –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä.
    """
    #await callback.message.delete()
    text = (
        "–ü—Ä–µ–¥–ª–∞–≥–∞—é –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –Ω–∞—à–µ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞, —á—Ç–æ–±—ã –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä, "
        "–∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–µ—Å—ë—Ç —Ç–µ–±–µ –æ—Ç 1 –º–ª–Ω —Ä—É–±–ª–µ–π –≤ –º–µ—Å—è—Ü.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏."
    )
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", callback_data="button1111"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.add(types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º", url="https://t.me/intecocert"))
    builder.adjust(1)

    await callback.message.answer_photo(
        URLInputFile("https://i.ibb.co/394v1dR8/51185ebb-d585-44b8-b7ed-4f8c5aa80228-1.jpg"),
        caption=text,
        reply_markup=builder.as_markup()
    )


# ============================================================
# –õ–æ–≥–∏–∫–∞ "–û–¥–µ–∂–¥–∞ –∏ –æ–±—É–≤—å" -> —É—Ç–æ—á–Ω–µ–Ω–∏–µ: –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö –∏–ª–∏ –¥–µ—Ç–µ–π
# ============================================================

@dp.callback_query(F.data == 'button01')
async def process_button01(callback: CallbackQuery):
    """
    –û–¥–µ–∂–¥–∞ –∏–ª–∏ –æ–±—É–≤—å –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö
    """
    #await callback.message.delete()
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="–û–¥–µ–∂–¥–∞ –ø–µ—Ä–≤–æ–≥–æ —Å–ª–æ—è (–Ω–∞—Ç–µ–ª—å–Ω–æ–µ –∏–ª–∏ –ø–æ—Å—Ç–µ–ª—å–Ω–æ–µ –±–µ–ª—å–µ)", callback_data="button111"))
    builder.add(types.InlineKeyboardButton(text="–û–¥–µ–∂–¥–∞ –≤—Ç–æ—Ä–æ–≥–æ —Å–ª–æ—è (–ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—è)", callback_data="button222"))
    builder.add(types.InlineKeyboardButton(text="–û–¥–µ–∂–¥–∞ —Ç—Ä–µ—Ç—å–µ–≥–æ —Å–ª–æ—è (–≤–µ—Ä—Ö–Ω—è—è –æ–¥–µ–∂–¥–∞)", callback_data="button333"))
    builder.add(types.InlineKeyboardButton(text="–¢–µ–∫—Å—Ç–∏–ª—å, —Å—É–º–∫–∏, –æ–±—É–≤—å", callback_data="button444"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.adjust(1)
    await callback.message.answer(
        "–ö–∞–∫–∞—è –∏–º–µ–Ω–Ω–æ –æ–¥–µ–∂–¥–∞ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
        reply_markup=builder.as_markup()
    )


@dp.callback_query(F.data == 'button88_child')
async def process_button88_child(callback: CallbackQuery):
    """
    –û–¥–µ–∂–¥–∞ –∏–ª–∏ –æ–±—É–≤—å –¥–ª—è –¥–µ—Ç–µ–π
    """
    #await callback.message.delete()
    text = ("–ö–∞–∫ –ø—Ä–∞–≤–∏–ª–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –ø–æ –¢–† –¢–° 007/2011, "
            "–¥–ª—è –∏–≥—Ä—É—à–µ–∫ –¢–† –¢–° 008/2011. –ù–∞ —Ä—è–¥ –ø—Ä–æ–¥—É–∫—Ü–∏–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–∞ "
            "–æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–°–ì–†).")

    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", callback_data="button1111"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.add(types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º", url="https://t.me/intecocert"))
    builder.adjust(1)
    await callback.message.answer_photo(
        URLInputFile("https://i.ibb.co/NdZs23qR/30c38436-3213-441e-8216-ca0b02414dc8.png"),
        caption=text
    )
    await asyncio.sleep(10)
    text = ("–¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å, –∫–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞–≤–∞—Ç—å –±–µ–∑ —à—Ç—Ä–∞—Ñ–æ–≤. "
        "–°–∞–º–æ–µ –≤—Ä–µ–º—è —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å!\n\n"
        "–¢–∞–∫ –∫–∞–∫ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Å—Ä–æ–∫–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ä–∞–∑–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤, —è –ø–µ—Ä–µ–¥–∞–º —Ç–µ–±—è –≤ –Ω–∞–¥—ë–∂–Ω—ã–µ —Ä—É–∫–∏ "
        "—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º, "
        "–∑–∞–ø–∏—à–∏—Å—å –Ω–∞ –æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é. üì≤")

    await callback.message.answer_photo(
        URLInputFile("https://i.ibb.co/GftshF5Q/691d121a-c832-495e-a7fa-0417946c09a7-1.jpg"),
        caption=text,
        reply_markup=builder.as_markup()
    )

    user_id = callback.from_user.id
    if user_id in pending_tasks_after_final:
        pending_tasks_after_final[user_id].cancel()
    pending_tasks_after_final[user_id] = asyncio.create_task(final_reminder_after_15min(user_id))


# ============================================================
# –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –∏ –≥–∞–¥–∂–µ—Ç—ã"
# ============================================================
@dp.callback_query(F.data == 'button441')
async def process_button441(callback_query: CallbackQuery):
    """
    –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –∏ –≥–∞–¥–∂–µ—Ç—ã –¥–ª—è –±—ã—Ç–æ–≤–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
    """
    #await callback_query.message.delete()
    text = (
        "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –Ω–∞ –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –ø–æ –¢–† –¢–° 004/2011, "
        "–¢–† –¢–° 020/2011 –∏ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏ –æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ –ø–æ –¢–† –ï–ê–≠–° 037/2016. "
        "–í–∞–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫ –ø–∏—Ç–∞–Ω–∏—è –∏ –≤–æ–ª—å—Ç–∞–∂, –∞ —Ç–∞–∫–∂–µ –Ω–∞ —á–∞—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ü–∏–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∞ –ß–µ—Å—Ç–Ω—ã–π –∑–Ω–∞–∫."
    )
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text='–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é', callback_data="button1111"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.add(types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º", url="https://t.me/intecocert"))
    builder.adjust(1)

    imageurl = URLInputFile('https://i.ibb.co/Z1dzYdNp/Bit.jpg')
    await callback_query.message.answer_photo(
        imageurl,
        caption=text
    )
    await asyncio.sleep(10)
    text = ("–¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å, –∫–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞–≤–∞—Ç—å –±–µ–∑ —à—Ç—Ä–∞—Ñ–æ–≤. "
        "–°–∞–º–æ–µ –≤—Ä–µ–º—è —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å!\n\n"
        "–¢–∞–∫ –∫–∞–∫ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Å—Ä–æ–∫–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ä–∞–∑–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤, —è –ø–µ—Ä–µ–¥–∞–º —Ç–µ–±—è –≤ –Ω–∞–¥—ë–∂–Ω—ã–µ —Ä—É–∫–∏ "
        "—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º, "
        "–∑–∞–ø–∏—à–∏—Å—å –Ω–∞ –æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é. üì≤")

    await callback_query.message.answer_photo(
        URLInputFile("https://i.ibb.co/GftshF5Q/691d121a-c832-495e-a7fa-0417946c09a7-1.jpg"),
        caption=text,
        reply_markup=builder.as_markup()
    )

    user_id = callback_query.from_user.id
    if user_id in pending_tasks_after_final:
        pending_tasks_after_final[user_id].cancel()
    pending_tasks_after_final[user_id] = asyncio.create_task(final_reminder_after_15min(user_id))


@dp.callback_query(F.data == 'button442')
async def process_button442(callback_query: CallbackQuery):
    """
    –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –∏ –≥–∞–¥–∂–µ—Ç—ã –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
    """
    #await callback_query.message.delete()
    text = (
        "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –Ω–∞ –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏ –æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ –ø–æ –¢–† –¢–° 004/2011, "
        "–¢–† –¢–° 020/2011, –∞ —Ç–∞–∫–∂–µ –Ω–∞ —á–∞—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ü–∏–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∞ –ß–µ—Å—Ç–Ω—ã–π –∑–Ω–∞–∫."
    )
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text='–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é', callback_data="button1111"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.add(types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º", url="https://t.me/intecocert"))
    builder.adjust(1)

    imageurl = URLInputFile('https://i.ibb.co/qFXnGMPN/Prom.jpg')
    await callback_query.message.answer_photo(
        imageurl,
        caption=text
    )
    await asyncio.sleep(10)
    text = ("–¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å, –∫–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞–≤–∞—Ç—å –±–µ–∑ —à—Ç—Ä–∞—Ñ–æ–≤. "
        "–°–∞–º–æ–µ –≤—Ä–µ–º—è —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å!\n\n"
        "–¢–∞–∫ –∫–∞–∫ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Å—Ä–æ–∫–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ä–∞–∑–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤, —è –ø–µ—Ä–µ–¥–∞–º —Ç–µ–±—è –≤ –Ω–∞–¥—ë–∂–Ω—ã–µ —Ä—É–∫–∏ "
        "—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º, "
        "–∑–∞–ø–∏—à–∏—Å—å –Ω–∞ –æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é. üì≤")

    await callback_query.message.answer_photo(
        URLInputFile("https://i.ibb.co/GftshF5Q/691d121a-c832-495e-a7fa-0417946c09a7-1.jpg"),
        caption=text,
        reply_markup=builder.as_markup()
    )

    user_id = callback_query.from_user.id
    if user_id in pending_tasks_after_final:
        pending_tasks_after_final[user_id].cancel()
    pending_tasks_after_final[user_id] = asyncio.create_task(final_reminder_after_15min(user_id))


# ============================================================
# –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –∏ —Ä–µ–º–æ–Ω—Ç"
# ============================================================
@dp.callback_query(F.data == 'button551')
async def process_button551(callback_query: CallbackQuery):
    """
    –û–±—â–µ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã
    """
    #await callback_query.message.delete()
    text = (
        "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –¥–∞–Ω–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∏ –Ω–∞ –Ω–µ–µ –æ—Ñ–æ—Ä–º–ª—è–µ—Ç—Å—è –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç, –∞ —Ç–∞–∫–∂–µ –Ω–∞ —á–∞—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ü–∏–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∞ –ß–µ—Å—Ç–Ω—ã–π –∑–Ω–∞–∫."
    )
    imageurl = URLInputFile('https://i.ibb.co/vCX2xdsj/270b6594-3cf8-4372-a96a-a4d1fa20f5c9.png')
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text='–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é', callback_data="button1111"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.add(types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º", url="https://t.me/intecocert"))
    builder.adjust(1)

    await callback_query.message.answer_photo(
        imageurl,
        caption=text
    )
    await asyncio.sleep(10)
    text = ("–¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å, –∫–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞–≤–∞—Ç—å –±–µ–∑ —à—Ç—Ä–∞—Ñ–æ–≤. "
        "–°–∞–º–æ–µ –≤—Ä–µ–º—è —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å!\n\n"
        "–¢–∞–∫ –∫–∞–∫ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Å—Ä–æ–∫–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ä–∞–∑–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤, —è –ø–µ—Ä–µ–¥–∞–º —Ç–µ–±—è –≤ –Ω–∞–¥—ë–∂–Ω—ã–µ —Ä—É–∫–∏ "
        "—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º, "
        "–∑–∞–ø–∏—à–∏—Å—å –Ω–∞ –æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é. üì≤")

    await callback_query.message.answer_photo(
        URLInputFile("https://i.ibb.co/GftshF5Q/691d121a-c832-495e-a7fa-0417946c09a7-1.jpg"),
        caption=text,
        reply_markup=builder.as_markup()
    )

    user_id = callback_query.from_user.id
    if user_id in pending_tasks_after_final:
        pending_tasks_after_final[user_id].cancel()
    pending_tasks_after_final[user_id] = asyncio.create_task(final_reminder_after_15min(user_id))


@dp.callback_query(F.data == 'button552')
async def process_button552(callback_query: CallbackQuery):
    """
    –î–ª—è –¥–æ—Ä–æ–∂–Ω–æ–≥–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞
    """
    #await callback_query.message.delete()
    text = (
        "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª–æ –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –¥–æ—Ä–æ–∂–Ω–æ–≥–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏ –æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ –ø–æ –¢–† –¢–° 014/2012, –∞ —Ç–∞–∫–∂–µ –Ω–∞ —á–∞—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ü–∏–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∞ –ß–µ—Å—Ç–Ω—ã–π –∑–Ω–∞–∫."
    )
    imageurl = URLInputFile('https://i.ibb.co/LFpFm2Y/b8266a5d-b993-4bed-bd96-2515b7e22e11.png')
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text='–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é', callback_data="button1111"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.add(types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º", url="https://t.me/intecocert"))
    builder.adjust(1)

    await callback_query.message.answer_photo(
        imageurl,
        caption=text
    )
    await asyncio.sleep(10)
    text = ("–¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å, –∫–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞–≤–∞—Ç—å –±–µ–∑ —à—Ç—Ä–∞—Ñ–æ–≤. "
        "–°–∞–º–æ–µ –≤—Ä–µ–º—è —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å!\n\n"
        "–¢–∞–∫ –∫–∞–∫ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Å—Ä–æ–∫–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ä–∞–∑–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤, —è –ø–µ—Ä–µ–¥–∞–º —Ç–µ–±—è –≤ –Ω–∞–¥—ë–∂–Ω—ã–µ —Ä—É–∫–∏ "
        "—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º, "
        "–∑–∞–ø–∏—à–∏—Å—å –Ω–∞ –æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é. üì≤")

    await callback_query.message.answer_photo(
        URLInputFile("https://i.ibb.co/GftshF5Q/691d121a-c832-495e-a7fa-0417946c09a7-1.jpg"),
        caption=text,
        reply_markup=builder.as_markup()
    )

    user_id = callback_query.from_user.id
    if user_id in pending_tasks_after_final:
        pending_tasks_after_final[user_id].cancel()
    pending_tasks_after_final[user_id] = asyncio.create_task(final_reminder_after_15min(user_id))


@dp.callback_query(F.data == 'button553')
async def process_button553(callback_query: CallbackQuery):
    """
    –î–ª—è –æ—Ç–¥–µ–ª–æ—á–Ω—ã—Ö —Ä–∞–±–æ—Ç
    """
    #await callback_query.message.delete()
    text = (
        "–ù–∞ —á–∞—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–¥–µ–ª–æ—á–Ω—ã—Ö —Ä–∞–±–æ—Ç, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–∞ –æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–°–ì–†) "
        "–∏ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏ –ì–û–°–¢ –†, –∞ —Ç–∞–∫–∂–µ –Ω–∞ —á–∞—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ü–∏–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∞ –ß–µ—Å—Ç–Ω—ã–π –∑–Ω–∞–∫."
    )
    imageurl = URLInputFile('https://i.ibb.co/Wpszp1pt/76b72b23-107c-466d-99fe-364b0e1c0af4.png')
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text='–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é', callback_data="button1111"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.add(types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º", url="https://t.me/intecocert"))
    builder.adjust(1)

    await callback_query.message.answer_photo(
        imageurl,
        caption=text
    )
    await asyncio.sleep(10)
    text = ("–¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å, –∫–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞–≤–∞—Ç—å –±–µ–∑ —à—Ç—Ä–∞—Ñ–æ–≤. "
        "–°–∞–º–æ–µ –≤—Ä–µ–º—è —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å!\n\n"
        "–¢–∞–∫ –∫–∞–∫ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Å—Ä–æ–∫–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ä–∞–∑–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤, —è –ø–µ—Ä–µ–¥–∞–º —Ç–µ–±—è –≤ –Ω–∞–¥—ë–∂–Ω—ã–µ —Ä—É–∫–∏ "
        "—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º, "
        "–∑–∞–ø–∏—à–∏—Å—å –Ω–∞ –æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é. üì≤")

    await callback_query.message.answer_photo(
        URLInputFile("https://i.ibb.co/GftshF5Q/691d121a-c832-495e-a7fa-0417946c09a7-1.jpg"),
        caption=text,
        reply_markup=builder.as_markup()
    )

    user_id = callback_query.from_user.id
    if user_id in pending_tasks_after_final:
        pending_tasks_after_final[user_id].cancel()
    pending_tasks_after_final[user_id] = asyncio.create_task(final_reminder_after_15min(user_id))


@dp.callback_query(F.data == 'button554')
async def process_button554(callback_query: CallbackQuery):
    """
    –ú–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    """
    #await callback_query.message.delete()
    text = (
        "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –¥–∞–Ω–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∏ –Ω–∞ –Ω–µ–µ –æ—Ñ–æ—Ä–º–ª—è–µ—Ç—Å—è –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç, –∞ —Ç–∞–∫–∂–µ –Ω–∞ —á–∞—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ü–∏–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∞ –ß–µ—Å—Ç–Ω—ã–π –∑–Ω–∞–∫."
    )
    imageurl = URLInputFile('https://i.ibb.co/ZRGPXspG/6a091eb6-05d6-4325-acb0-eb66a9b9e46f.png')
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text='–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é', callback_data="button1111"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.add(types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º", url="https://t.me/intecocert"))
    builder.adjust(1)

    await callback_query.message.answer_photo(
        imageurl,
        caption=text
    )
    await asyncio.sleep(10)
    text = ("–¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å, –∫–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞–≤–∞—Ç—å –±–µ–∑ —à—Ç—Ä–∞—Ñ–æ–≤. "
        "–°–∞–º–æ–µ –≤—Ä–µ–º—è —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å!\n\n"
        "–¢–∞–∫ –∫–∞–∫ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Å—Ä–æ–∫–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ä–∞–∑–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤, —è –ø–µ—Ä–µ–¥–∞–º —Ç–µ–±—è –≤ –Ω–∞–¥—ë–∂–Ω—ã–µ —Ä—É–∫–∏ "
        "—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º, "
        "–∑–∞–ø–∏—à–∏—Å—å –Ω–∞ –æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é. üì≤")

    await callback_query.message.answer_photo(
        URLInputFile("https://i.ibb.co/GftshF5Q/691d121a-c832-495e-a7fa-0417946c09a7-1.jpg"),
        caption=text,
        reply_markup=builder.as_markup()
    )

    user_id = callback_query.from_user.id
    if user_id in pending_tasks_after_final:
        pending_tasks_after_final[user_id].cancel()
    pending_tasks_after_final[user_id] = asyncio.create_task(final_reminder_after_15min(user_id))


# ============================================================
# –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è "–ú–µ–±–µ–ª—å"
# ============================================================
@dp.callback_query(F.data == 'button66')
async def process_button66(callback_query: CallbackQuery):
    """
    –ú–µ–±–µ–ª—å
    """
    #await callback_query.message.delete()
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text='–î–ª—è –¥–µ—Ç–µ–π', callback_data="button661"))
    builder.add(types.InlineKeyboardButton(text="–î–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö", callback_data="button662"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.adjust(1)
    await callback_query.message.answer("–î–ª—è –∫–æ–≥–æ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–∞–µ—Ç—Å—è –º–µ–±–µ–ª—å?", reply_markup=builder.as_markup())

    user_id = callback_query.from_user.id
    if user_id in pending_tasks_2h:
        pending_tasks_2h[user_id].cancel()
        del pending_tasks_2h[user_id]
    pending_tasks_2h[user_id] = asyncio.create_task(reminder_after_2h(user_id))


@dp.callback_query(F.data == 'button661')
async def process_button661(callback_query: CallbackQuery):
    """
    –ú–µ–±–µ–ª—å –¥–ª—è –¥–µ—Ç–µ–π
    """
    #await callback_query.message.delete()
    text = (
        "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –Ω–∞ –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –ø–æ –¢–† –¢–° 025/2012."
    )
    imageurl = URLInputFile('https://i.ibb.co/Lz3GWmcL/b1e64e57-5d1f-4fcc-ae95-8bf03c23afb5.png')
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text='–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é', callback_data="button1111"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.add(types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º", url="https://t.me/intecocert"))
    builder.adjust(1)

    await callback_query.message.answer_photo(
        imageurl,
        caption=text
    )
    await asyncio.sleep(10)
    text = ("–¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å, –∫–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞–≤–∞—Ç—å –±–µ–∑ —à—Ç—Ä–∞—Ñ–æ–≤. "
        "–°–∞–º–æ–µ –≤—Ä–µ–º—è —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å!\n\n"
        "–¢–∞–∫ –∫–∞–∫ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Å—Ä–æ–∫–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ä–∞–∑–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤, —è –ø–µ—Ä–µ–¥–∞–º —Ç–µ–±—è –≤ –Ω–∞–¥—ë–∂–Ω—ã–µ —Ä—É–∫–∏ "
        "—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º, "
        "–∑–∞–ø–∏—à–∏—Å—å –Ω–∞ –æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é. üì≤")

    await callback_query.message.answer_photo(
        URLInputFile("https://i.ibb.co/GftshF5Q/691d121a-c832-495e-a7fa-0417946c09a7-1.jpg"),
        caption=text,
        reply_markup=builder.as_markup()
    )

    user_id = callback_query.from_user.id
    if user_id in pending_tasks_after_final:
        pending_tasks_after_final[user_id].cancel()
    pending_tasks_after_final[user_id] = asyncio.create_task(final_reminder_after_15min(user_id))


@dp.callback_query(F.data == 'button662')
async def process_button662(callback_query: CallbackQuery):
    """
    –ú–µ–±–µ–ª—å –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö
    """
    #await callback_query.message.delete()
    text = (
        "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –Ω–∞ –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏ –æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ –ø–æ –¢–† –¢–° 025/2012."
    )
    imageurl = URLInputFile('https://i.ibb.co/67p9qfL6/b1ea81f6-1596-48ce-9fed-2ab7b535a272.png')
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text='–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é', callback_data="button1111"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.add(types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º", url="https://t.me/intecocert"))
    builder.adjust(1)

    await callback_query.message.answer_photo(
        imageurl,
        caption=text
    )
    await asyncio.sleep(10)
    text = ("–¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å, –∫–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞–≤–∞—Ç—å –±–µ–∑ —à—Ç—Ä–∞—Ñ–æ–≤. "
        "–°–∞–º–æ–µ –≤—Ä–µ–º—è —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å!\n\n"
        "–¢–∞–∫ –∫–∞–∫ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Å—Ä–æ–∫–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ä–∞–∑–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤, —è –ø–µ—Ä–µ–¥–∞–º —Ç–µ–±—è –≤ –Ω–∞–¥—ë–∂–Ω—ã–µ —Ä—É–∫–∏ "
        "—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º, "
        "–∑–∞–ø–∏—à–∏—Å—å –Ω–∞ –æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é. üì≤")

    await callback_query.message.answer_photo(
        URLInputFile("https://i.ibb.co/GftshF5Q/691d121a-c832-495e-a7fa-0417946c09a7-1.jpg"),
        caption=text,
        reply_markup=builder.as_markup()
    )
    user_id = callback_query.from_user.id
    if user_id in pending_tasks_after_final:
        pending_tasks_after_final[user_id].cancel()
    pending_tasks_after_final[user_id] = asyncio.create_task(final_reminder_after_15min(user_id))


# ============================================================
# –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è "–û–¥–µ–∂–¥–∞ –ø–µ—Ä–≤–æ–≥–æ, –≤—Ç–æ—Ä–æ–≥–æ, —Ç—Ä–µ—Ç—å–µ–≥–æ —Å–ª–æ—è..."
# ============================================================
@dp.callback_query(F.data == 'button111')
async def process_button111(callback: CallbackQuery):
    """
    –û–¥–µ–∂–¥–∞ –ø–µ—Ä–≤–æ–≥–æ —Å–ª–æ—è
    """
    #await callback.message.delete()
    text = (
        "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –Ω–∞ –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –ø–æ –¢–† –¢–° 017/2011, "
        "–∞ —Ç–∞–∫–∂–µ –Ω–∞ —á–∞—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ü–∏–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∞ –ß–µ—Å—Ç–Ω—ã–π –∑–Ω–∞–∫."
    )
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text='–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é', callback_data="button1111"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.add(types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º", url="https://t.me/intecocert"))
    builder.adjust(1)

    imageurl = URLInputFile('https://i.ibb.co/zV9ZQrbb/b83bd184-afb8-4452-a3fa-0ce330ccf349.png')
    await callback.message.answer_photo(
        imageurl,
        caption=text
    )
    await asyncio.sleep(10)
    text = ("–¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å, –∫–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞–≤–∞—Ç—å –±–µ–∑ —à—Ç—Ä–∞—Ñ–æ–≤. "
        "–°–∞–º–æ–µ –≤—Ä–µ–º—è —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å!\n\n"
        "–¢–∞–∫ –∫–∞–∫ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Å—Ä–æ–∫–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ä–∞–∑–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤, —è –ø–µ—Ä–µ–¥–∞–º —Ç–µ–±—è –≤ –Ω–∞–¥—ë–∂–Ω—ã–µ —Ä—É–∫–∏ "
        "—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º, "
        "–∑–∞–ø–∏—à–∏—Å—å –Ω–∞ –æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é. üì≤")

    await callback.message.answer_photo(
        URLInputFile("https://i.ibb.co/GftshF5Q/691d121a-c832-495e-a7fa-0417946c09a7-1.jpg"),
        caption=text,
        reply_markup=builder.as_markup()
    )

    user_id = callback.from_user.id
    if user_id in pending_tasks_after_final:
        pending_tasks_after_final[user_id].cancel()
    pending_tasks_after_final[user_id] = asyncio.create_task(final_reminder_after_15min(user_id))


@dp.callback_query(F.data == 'button222')
async def process_button222(callback: CallbackQuery):
    """
    –û–¥–µ–∂–¥–∞ –≤—Ç–æ—Ä–æ–≥–æ —Å–ª–æ—è
    """
    #await callback.message.delete()
    text = (
        "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –Ω–∞ –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏ –æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ –ø–æ –¢–† –¢–° 017/2011, "
        "–∞ —Ç–∞–∫–∂–µ –Ω–∞ —á–∞—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ü–∏–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∞ –ß–µ—Å—Ç–Ω—ã–π –∑–Ω–∞–∫."
        "–î–ª—è —Å–≤—è–∑–∏ —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º –∑–∞–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –æ–Ω–ª–∞–π–Ω –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é."
    )
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text='–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é', callback_data="button1111"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.add(types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º", url="https://t.me/intecocert"))
    builder.adjust(1)

    imageurl = URLInputFile('https://i.ibb.co/WWNb3TG8/2.jpg')
    await callback.message.answer_photo(
        imageurl,
        caption=text
    )
    await asyncio.sleep(10)
    text = ("–¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å, –∫–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞–≤–∞—Ç—å –±–µ–∑ —à—Ç—Ä–∞—Ñ–æ–≤. "
        "–°–∞–º–æ–µ –≤—Ä–µ–º—è —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å!\n\n"
        "–¢–∞–∫ –∫–∞–∫ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Å—Ä–æ–∫–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ä–∞–∑–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤, —è –ø–µ—Ä–µ–¥–∞–º —Ç–µ–±—è –≤ –Ω–∞–¥—ë–∂–Ω—ã–µ —Ä—É–∫–∏ "
        "—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º, "
        "–∑–∞–ø–∏—à–∏—Å—å –Ω–∞ –æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é. üì≤")

    await callback.message.answer_photo(
        URLInputFile("https://i.ibb.co/GftshF5Q/691d121a-c832-495e-a7fa-0417946c09a7-1.jpg"),
        caption=text,
        reply_markup=builder.as_markup()
    )

    user_id = callback.from_user.id
    if user_id in pending_tasks_after_final:
        pending_tasks_after_final[user_id].cancel()
    pending_tasks_after_final[user_id] = asyncio.create_task(final_reminder_after_15min(user_id))


@dp.callback_query(F.data == 'button333')
async def process_button333(callback: CallbackQuery):
    """
    –û–¥–µ–∂–¥–∞ —Ç—Ä–µ—Ç—å–µ–≥–æ —Å–ª–æ—è
    """
    #await callback.message.delete()
    text = (
        "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –Ω–∞ –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏ –æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ –ø–æ –¢–† –¢–° 017/2011, "
        "–∞ —Ç–∞–∫–∂–µ –Ω–∞ —á–∞—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ü–∏–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∞ –ß–µ—Å—Ç–Ω—ã–π –∑–Ω–∞–∫."
    )
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text='–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é', callback_data="button1111"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.add(types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º", url="https://t.me/intecocert"))
    builder.adjust(1)

    imageurl = URLInputFile('https://i.ibb.co/LXq5DDHY/ab39738d-13b3-409f-968e-964870beec32.png')
    await callback.message.answer_photo(
        imageurl,
        caption=text
    )
    await asyncio.sleep(10)
    text = ("–¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å, –∫–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞–≤–∞—Ç—å –±–µ–∑ —à—Ç—Ä–∞—Ñ–æ–≤. "
        "–°–∞–º–æ–µ –≤—Ä–µ–º—è —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å!\n\n"
        "–¢–∞–∫ –∫–∞–∫ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Å—Ä–æ–∫–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ä–∞–∑–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤, —è –ø–µ—Ä–µ–¥–∞–º —Ç–µ–±—è –≤ –Ω–∞–¥—ë–∂–Ω—ã–µ —Ä—É–∫–∏ "
        "—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º, "
        "–∑–∞–ø–∏—à–∏—Å—å –Ω–∞ –æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é. üì≤")

    await callback.message.answer_photo(
        URLInputFile("https://i.ibb.co/GftshF5Q/691d121a-c832-495e-a7fa-0417946c09a7-1.jpg"),
        caption=text,
        reply_markup=builder.as_markup()
    )

    user_id = callback.from_user.id
    if user_id in pending_tasks_after_final:
        pending_tasks_after_final[user_id].cancel()
    pending_tasks_after_final[user_id] = asyncio.create_task(final_reminder_after_15min(user_id))


@dp.callback_query(F.data == 'button444')
async def process_button444(callback: CallbackQuery):
    """
    –¢–µ–∫—Å—Ç–∏–ª—å, —Å—É–º–∫–∏, –æ–±—É–≤—å
    """
    #await callback.message.delete()
    text = (
        "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –Ω–∞ –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏ –æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ –ø–æ –¢–† –¢–° 017/2011, "
        "–∞ —Ç–∞–∫–∂–µ –Ω–∞ —á–∞—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ü–∏–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∞ –ß–µ—Å—Ç–Ω—ã–π –∑–Ω–∞–∫."
        "–î–ª—è —Å–≤—è–∑–∏ —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º –∑–∞–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –æ–Ω–ª–∞–π–Ω –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é."
    )
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text='–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é', callback_data="button1111"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.add(types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º", url="https://t.me/intecocert"))
    builder.adjust(1)

    imageurl = URLInputFile('https://i.ibb.co/qMHfXWNZ/a6a5ad2b-a4e2-4337-96ca-836212c4b72c.png')
    await callback.message.answer_photo(
        imageurl,
        caption=text
    )
    await asyncio.sleep(10)
    text = ("–¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å, –∫–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞–≤–∞—Ç—å –±–µ–∑ —à—Ç—Ä–∞—Ñ–æ–≤. "
        "–°–∞–º–æ–µ –≤—Ä–µ–º—è —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å!\n\n"
        "–¢–∞–∫ –∫–∞–∫ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Å—Ä–æ–∫–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ä–∞–∑–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤, —è –ø–µ—Ä–µ–¥–∞–º —Ç–µ–±—è –≤ –Ω–∞–¥—ë–∂–Ω—ã–µ —Ä—É–∫–∏ "
        "—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º, "
        "–∑–∞–ø–∏—à–∏—Å—å –Ω–∞ –æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é. üì≤")

    await callback.message.answer_photo(
        URLInputFile("https://i.ibb.co/GftshF5Q/691d121a-c832-495e-a7fa-0417946c09a7-1.jpg"),
        caption=text,
        reply_markup=builder.as_markup()
    )

    user_id = callback.from_user.id
    if user_id in pending_tasks_after_final:
        pending_tasks_after_final[user_id].cancel()
    pending_tasks_after_final[user_id] = asyncio.create_task(final_reminder_after_15min(user_id))


# ============================================================
# –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
# ============================================================
@dp.callback_query(F.data == 'back_main_menu')
async def process_back_main(callback: CallbackQuery):
    #await callback.message.delete()
    await send_main_menu(callback.message)

@dp.callback_query(F.data == 'back')
async def process_back(callback: CallbackQuery):
    #await callback.message.delete()
    await send_main_menu(callback.message)


# ============================================================
# –õ–æ–≥–∏–∫–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏: –≤—ã–±–æ—Ä –¥–∞—Ç—ã, –≤—Ä–µ–º–µ–Ω–∏, –æ–ø–ª–∞—Ç–∞
# ============================================================

# –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
class UserState2(StatesGroup):
    tov = State()
    mail = State()
    phon = State()
    name = State()

@dp.callback_query(F.data == 'button1111')
async def callback_consultation(callback: CallbackQuery):
    """
    –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é'
    (–ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≤–∏–¥–µ–ª, –∫–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω—ã).
    """
    #await callback.message.delete()
    text = (
        "–•–æ—á–µ—à—å –≤—ã–π—Ç–∏ –Ω–∞ –º–∏–ª–ª–∏–æ–Ω —Å –ø—Ä–æ–¥–∞–∂? üî•\n\n"
        "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏ –∑–∞–ø–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —Å —ç–∫—Å–ø–µ—Ä—Ç–æ–º –ø–æ –°–£–ü–ï–†–¶–ï–ù–ï - 990 —Ä—É–±–ª–µ–π, –í–ú–ï–°–¢–û 2500 —Ä—É–±–ª–µ–π üî•\n\n"
        "–ù–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Ç—ã —É–∑–Ω–∞–µ—à—å:\n"
        "‚úÖ –ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä –¥–ª—è —Ö–æ—Ä–æ—à–µ–π –ø—Ä–æ–¥–∞–∂–∏ (—Å–∞–º—ã–µ —Ç–æ–ø–æ–≤—ã–µ –Ω–∏—à–∏)?\n"
        "‚úÖ –ö–∞–∫ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏—Ö –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤?\n"
        "‚úÖ –ì–¥–µ –∑–∞–∫—É–ø–∞—Ç—å —Ç–æ–≤–∞—Ä –∏–ª–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å?\n"
        "‚úÖ –ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç —Å—Ç–∞–ª –ø—Ä–æ–¥–∞–≤–∞—Ç—å –ø–æ–¥ –≤–∞—à–∏–º –±—Ä–µ–Ω–¥–æ–º (–ª–æ–≥–æ—Ç–∏–ø–æ–º, –Ω–∞–∑–≤–∞–Ω–∏–∏)?\n"
        "‚úÖ –ö–∞–∫ —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å –Ω–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (–∫–∞–∫–∏–µ —Ç–æ–≤–∞—Ä—ã –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –≤ –æ–¥–Ω–æ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ –∏ —Ç.–ø.)?\n"
    )
    rates_txt, usd, eur = await price_in_fx(990)
    await callback.message.answer(
        f"{rates_txt}\n\n"
        f"–°—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ ‚Äî 990 ‚ÇΩ ‚âà {usd:.2f} $ –∏–ª–∏ {eur:.2f} ‚Ç¨"
    )
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text='–û–ø–ª–∞—Ç–∏—Ç—å 990 —Ä—É–±.', callback_data="button_pay_consult"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.add(types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º", url="https://t.me/intecocert"))
    builder.adjust(1)

    await callback.message.answer_photo(
        URLInputFile("https://i.ibb.co/Lzw2D3sW/B5ae4573-58a0-4b54-aa84-52a55891f2f0.jpg"),
        caption=text,
        reply_markup=builder.as_markup()
    )


@dp.callback_query(F.data == 'button_pay_consult')
async def pay_consultation(callback: CallbackQuery):
    """
    –ö–Ω–æ–ø–∫–∞ –æ–ø–ª–∞—Ç—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.
    """
    #await callback.message.delete()
    await bot.send_invoice(
        chat_id=callback.message.chat.id,
        need_email=True,
        send_email_to_provider=True,
        title='–û–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è (–∞–∫—Ü–∏—è)',
        description='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏ –∑–∞–ø–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —Å —ç–∫—Å–ø–µ—Ä—Ç–æ–º –ø–æ –°–£–ü–ï–†–¶–ï–ù–ï - 990 —Ä—É–±–ª–µ–π, –≤–º–µ—Å—Ç–æ 2500 —Ä—É–±–ª–µ–π!',
        provider_token=PAYMENTS_PROVIDER_TOKEN,
        currency='RUB',
        is_flexible=False,
        prices=[PRICE],
        start_parameter='time-machine-example',
        payload='some-invoice-payload-for-our-internal-use',
        provider_data=json.dumps(provider_data1)
    )


@dp.pre_checkout_query(lambda query: True)
async def process_pre_checkout_query(pre_checkout_query: PreCheckoutQuery):
    """
    –û—Ç–≤–µ—Ç –Ω–∞ pre_checkout
    """
    await bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True)


@dp.message(F.successful_payment)
async def process_successful_payment(message: Message):
    """
    –ï—Å–ª–∏ –æ–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ
    """

    total_amount = message.successful_payment.total_amount / 100
    currency = message.successful_payment.currency

    await save_payment(message)

    thank_you_message = (
        f"–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ ‚úÖ, –±–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –¥–æ–≤–µ—Ä–∏–µ –∫ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏! –ñ–µ–ª–∞–µ–º —Ö–æ—Ä–æ—à–µ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏! ‚ù§Ô∏è\n\n"
        f"–í—ã –æ–ø–ª–∞—Ç–∏–ª–∏ {total_amount} {currency}. \n"
        "–ß—Ç–æ–±—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ –µ—â—ë –±–æ–ª–µ–µ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ, –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–∏ –≤–æ–ø—Ä–æ—Å—ã –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.\n"
        "–Ø –∑–∞–±–æ—Ç–ª–∏–≤–æ –Ω–∞–ø–æ–º–Ω—é —Ç–µ–±–µ –æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∑–∞ –¥–µ–Ω—å –∏ –≤ –¥–µ–Ω—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏."
    )
    await message.answer(thank_you_message)

    # –ß–µ—Ä–µ–∑ –ø–∞—Ä—É –º–∏–Ω—É—Ç –Ω–∞–ø–æ–º–Ω–∏–º "–∑–∞ –¥–µ–Ω—å –¥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏", –∑–∞—Ç–µ–º –µ—â—ë —Ä–∞–∑ "–≤ –¥–µ–Ω—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏" (–¥–µ–º–æ-—Ä–µ–∂–∏–º)
    asyncio.create_task(remind_consultation_day_before(message.from_user.id, f, time))
    asyncio.create_task(remind_consultation_in_day(message.from_user.id, f, time))

    await bot.send_message(
        1623431342,
        '—é–∑–µ—Ä ' + str(message.from_user.id) + ' –æ–ø–ª–∞—Ç–∏–ª –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é.'
    )


# ============================================================
# –õ–æ–≥–∏–∫–∞ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è "–ï—â—ë –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–∏–ª—Å—è", –∫–æ–≥–¥–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å)
# (–∏—Å–ø–æ–ª—å–∑—É–µ–º aiogram_calendar)
# ============================================================

@dp.callback_query(SimpleCalendarCallback.filter())
async def process_simple_calendar(callback_query: CallbackQuery, callback_data: SimpleCalendarCallback):
    global f
    calendar = SimpleCalendar(show_alerts=True)
    calendar.set_dates_range(datetime(2024, 1, 1), datetime(2025, 12, 31))
    selected, date = await SimpleCalendar().process_selection(callback_query, callback_data)

    if selected and date:
        f = date.strftime("%d/%m/%Y")
        text = (f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –¥–∞—Ç—É: {f}.\n"
                "–ê —Ç–µ–ø–µ—Ä—å —É—Å–ø–µ–π –∑–∞–Ω—è—Ç—å —Å–∞–º–æ–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è —Ç–µ–±—è!")
        builder = InlineKeyboardBuilder()
        builder.add(types.InlineKeyboardButton(text='–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', callback_data="button111115"))
        builder.add(types.InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –¥–∞—Ç—É', callback_data="button1111"))
        builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
        builder.adjust(1)
        await callback_query.message.answer(text, reply_markup=builder.as_markup())

    elif callback_data.act == 'CANCEL':
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª CANCEL, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        #await callback_query.message.delete()
        await send_main_menu(callback_query.message)


@dp.callback_query(F.data == 'button111115')
async def process_time_choice(callback: CallbackQuery):
    """
    –ü—Ä–æ—Å–∏–º –≤—ã–±—Ä–∞—Ç—å –≤—Ä–µ–º—è
    """
    global f
    #await callback.message.delete()
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text='10:00', callback_data="time_10"))
    builder.add(types.InlineKeyboardButton(text='11:00', callback_data="time_11"))
    builder.add(types.InlineKeyboardButton(text='12:00', callback_data="time_12"))
    builder.add(types.InlineKeyboardButton(text='13:00', callback_data="time_13"))
    builder.add(types.InlineKeyboardButton(text='14:00', callback_data="time_14"))
    builder.add(types.InlineKeyboardButton(text='15:00', callback_data="time_15"))
    builder.add(types.InlineKeyboardButton(text='16:00', callback_data="time_16"))
    builder.add(types.InlineKeyboardButton(text='17:00', callback_data="time_17"))
    builder.add(types.InlineKeyboardButton(text='18:00', callback_data="time_18"))
    builder.adjust(3)
    await callback.message.answer(
        f"–°–∞–º–æ–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è —Ç–µ–±—è –Ω–∞ {f}",
        reply_markup=builder.as_markup()
    )


@dp.callback_query(lambda c: c.data.startswith("time_"))
async def confirm_time_consultation(callback: CallbackQuery):
    """
    –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
    """
    global time
    time = callback.data.split("_")[1] + ":00"
    #await callback.message.delete()
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text='–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', callback_data="proceed_to_payment"))
    builder.add(types.InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è', callback_data="button111115"))
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.adjust(1)

    text = (
        f"–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –Ω–∞ {f} –≤ {time}, —Å–∫–æ—Ä–µ–µ –ø–µ—Ä–µ—Ö–æ–¥–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã "
        "–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ —Å—É–ø–µ—Ä—Ü–µ–Ω–µ - 990 —Ä—É–±–ª–µ–π, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å:\n"
        "- –ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–æ–≤–∞—Ä\n"
        "- –ö–∞–∫ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤\n"
        "- –ì–¥–µ –Ω–∞–π—Ç–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è –ø—Ä–æ–¥—É–∫—Ü–∏–∏, –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω–æ–≥–æ –≤ —Ç–≤–æ–∏—Ö –ø—Ä–æ–¥–∞–∂–∞—Ö\n"
        "- –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –±—Ä–µ–Ω–¥ –∏ –Ω–µ –ø–æ–ø–∞—Å—Ç—å –Ω–∞ —à—Ç—Ä–∞—Ñ—ã\n"
        "- –ö–∞–∫ —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å –Ω–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ –ø—Ä–∏—É–º–Ω–æ–∂–∏—Ç—å –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –¥–µ–Ω—å–≥–∏."
    )
    await callback.message.answer(text, reply_markup=builder.as_markup())


@dp.callback_query(F.data == 'proceed_to_payment')
async def pay_consultation_choice(callback: CallbackQuery):
    """
    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç, —á—Ç–æ —Ö–æ—á–µ—Ç –æ–ø–ª–∞—Ç–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–µ–Ω—å –∏ –≤—Ä–µ–º—è.
    """
    global f, time
    #await callback.message.delete()
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    builder.adjust(1)

    # –í—ã–∑—ã–≤–∞–µ–º –æ–ø–ª–∞—Ç—É
    await bot.send_invoice(
        callback.message.chat.id,
        need_email=True,
        send_email_to_provider=True,
        title=f'–û–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è {f} –≤ {time}',
        description=(f'–ù–∞—à –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –ø–µ—Ä–µ–¥ –æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–µ–π {f} –≤ {time}, '
                     '—á—Ç–æ–±—ã –æ–±—Å—É–¥–∏—Ç—å –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã. –ù–∞ —Å–∞–º–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –æ–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç –≤–∞–º –≤—Å—é –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é '
                     '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω—É–∂–Ω—ã—Ö –≤–∞–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.'),
        provider_token=PAYMENTS_PROVIDER_TOKEN,
        currency='RUB',
        is_flexible=False,
        prices=[PRICE],
        start_parameter='time-machine-example',
        payload='some-invoice-payload-for-our-internal-use',
        provider_data=json.dumps(provider_data1),
        reply_markup=builder.as_markup()
    )


# ============================================================
# –ó–∞–ø—É—Å–∫
# ============================================================
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
